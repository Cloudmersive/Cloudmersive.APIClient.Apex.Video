/*
 * videoapi
 * The video APIs help you convert, encode, and transcode videos.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagAudioApi {
    SwagClient client;

    public SwagAudioApi(SwagClient client) {
        this.client = client;
    }

    public SwagAudioApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Convert Audio File to AAC format.
     * Automatically detect audio file format and convert it to AAC format. Supports many input audio formats, including AAC, FLAC, M4A, MP2, MP3, OGG, WMA, and WAV. Uses 1 API call per 10 MB of file size. Also uses 1 API call per additional minute of processing time over 5 minutes, up to a maximum of 25 minutes total processing time. Maximum output file size is 50GB.
     * @param inputFile Input file to perform the operation on. (optional)
     * @param fileUrl Optional; URL of an audio file being used for conversion. Use this option for files larger than 2GB. (optional)
     * @param bitRate Optional; Specify the desired bitrate of the converted audio file in kilobytes per second (kB/s). Value may be between 48 and 1,411. By default, the optimal bitrate will be chosen automatically. (optional)
     * @return Blob
     * @throws Swagger.ApiException if fails to make API call
     */
    public Blob audioConvertToAac(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('inputFile', (Blob) params.get('inputFile')));

        return (Blob) client.invoke(
            'POST', '/video/convert/to/aac', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'fileUrl' => (String) params.get('fileUrl'),
                'bitRate' => (Integer) params.get('bitRate')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/x-www-form-urlencoded' },
            new List<String> { 'Apikey' },
            Blob.class
        );
    }
    /**
     * Convert Audio File to M4A format.
     * Automatically detect audio file format and convert it to M4A format. Supports many input audio formats, including AAC, FLAC, M4A, MP2, MP3, OGG, WMA, and WAV. Uses 1 API call per 10 MB of file size. Also uses 1 API call per additional minute of processing time over 5 minutes, up to a maximum of 25 minutes total processing time. Maximum output file size is 50GB.
     * @param inputFile Input file to perform the operation on. (optional)
     * @param fileUrl Optional; URL of an audio file being used for conversion. Use this option for files larger than 2GB. (optional)
     * @param bitRate Optional; Specify the desired bitrate of the converted audio file in kilobytes per second (kB/s). Value may be between 48 and 1,411. By default, the optimal bitrate will be chosen automatically. (optional)
     * @return Blob
     * @throws Swagger.ApiException if fails to make API call
     */
    public Blob audioConvertToM4a(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('inputFile', (Blob) params.get('inputFile')));

        return (Blob) client.invoke(
            'POST', '/video/convert/to/m4a', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'fileUrl' => (String) params.get('fileUrl'),
                'bitRate' => (Integer) params.get('bitRate')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/x-www-form-urlencoded' },
            new List<String> { 'Apikey' },
            Blob.class
        );
    }
    /**
     * Convert Audio File to MP3 format.
     * Automatically detect audio file format and convert it to MP3 format. Supports many input audio formats, including AAC, FLAC, M4A, MP2, MP3, OGG, WMA, and WAV. Uses 1 API call per 10 MB of file size. Also uses 1 API call per additional minute of processing time over 5 minutes, up to a maximum of 25 minutes total processing time. Maximum output file size is 50GB.
     * @param inputFile Input file to perform the operation on. (optional)
     * @param fileUrl Optional; URL of an audio file being used for conversion. Use this option for files larger than 2GB. (optional)
     * @param bitRate Optional; Specify the desired bitrate of the converted audio file in kilobytes per second (kB/s). Value may be between 48 and 1,411. By default, the optimal bitrate will be chosen automatically. (optional)
     * @return Blob
     * @throws Swagger.ApiException if fails to make API call
     */
    public Blob audioConvertToMp3(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('inputFile', (Blob) params.get('inputFile')));

        return (Blob) client.invoke(
            'POST', '/video/convert/to/mp3', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'fileUrl' => (String) params.get('fileUrl'),
                'bitRate' => (Integer) params.get('bitRate')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/x-www-form-urlencoded' },
            new List<String> { 'Apikey' },
            Blob.class
        );
    }
    /**
     * Convert Audio File to WAV format.
     * Automatically detect audio file format and convert it to WAV format. Supports many input audio formats, including AAC, FLAC, M4A, MP2, MP3, OGG, WMA, and WAV. Uses 1 API call per 10 MB of file size. Also uses 1 API call per additional minute of processing time over 5 minutes, up to a maximum of 25 minutes total processing time. Maximum output file size is 50GB.
     * @param inputFile Input file to perform the operation on. (optional)
     * @param fileUrl Optional; URL of an audio file being used for conversion. Use this option for files larger than 2GB. (optional)
     * @param sampleRate Optional; Specify the desired sample rate of the converted audio file in kHz. Value may be between 8 and 96. Standard for audio CDs is 44.1, while DVD audio standard is 48. By default, the optimal sample rate will be chosen automatically. (optional)
     * @return Blob
     * @throws Swagger.ApiException if fails to make API call
     */
    public Blob audioConvertToWav(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('inputFile', (Blob) params.get('inputFile')));

        return (Blob) client.invoke(
            'POST', '/video/convert/to/wav', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'fileUrl' => (String) params.get('fileUrl'),
                'sampleRate' => (Double) params.get('sampleRate')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/x-www-form-urlencoded' },
            new List<String> { 'Apikey' },
            Blob.class
        );
    }
}
