/*
 * videoapi
 * The video APIs help you convert, encode, and transcode videos.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of retrieving information about a video or audio file
 */
public class SwagMediaInformation implements Swagger.MappedProperties {
    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * The file\'s short format name
     * @return fileFormat
     */
    public String fileFormat { get; set; }

    /**
     * The file\'s full format name
     * @return fileFormatFull
     */
    public String fileFormatFull { get; set; }

    /**
     * A list of the file\'s valid formats
     * @return validFileFormats
     */
    public List<String> validFileFormats { get; set; }

    /**
     * The video\'s width, if file is a video
     * @return width
     */
    public Integer width { get; set; }

    /**
     * The video\'s height, if file is a video
     * @return height
     */
    public Integer height { get; set; }

    /**
     * The file\'s size in bytes
     * @return size
     */
    public Integer size { get; set; }

    /**
     * The file\'s bit rate
     * @return bitRate
     */
    public Integer bitRate { get; set; }

    /**
     * The file\'s duration in seconds
     * @return duration
     */
    public Double duration { get; set; }

    /**
     * The file\'s media start time
     * @return startTime
     */
    public Double startTime { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'FileFormat' => 'fileFormat',
        'FileFormatFull' => 'fileFormatFull',
        'ValidFileFormats' => 'validFileFormats',
        'Width' => 'width',
        'Height' => 'height',
        'Size' => 'size',
        'BitRate' => 'bitRate',
        'Duration' => 'duration',
        'StartTime' => 'startTime'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagMediaInformation() {
        validFileFormats = new List<String>();
    }

    public static SwagMediaInformation getExample() {
        SwagMediaInformation mediaInformation = new SwagMediaInformation();
        mediaInformation.successful = true;
        mediaInformation.fileFormat = 'aeiou';
        mediaInformation.fileFormatFull = 'aeiou';
        mediaInformation.validFileFormats = new List<String>{'aeiou'};
        mediaInformation.width = 123;
        mediaInformation.height = 123;
        mediaInformation.size = 123;
        mediaInformation.bitRate = 123;
        mediaInformation.duration = 1.3579;
        mediaInformation.startTime = 1.3579;
        return mediaInformation;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagMediaInformation) {
            SwagMediaInformation mediaInformation = (SwagMediaInformation) obj;
            return this.successful == mediaInformation.successful
                && this.fileFormat == mediaInformation.fileFormat
                && this.fileFormatFull == mediaInformation.fileFormatFull
                && this.validFileFormats == mediaInformation.validFileFormats
                && this.width == mediaInformation.width
                && this.height == mediaInformation.height
                && this.size == mediaInformation.size
                && this.bitRate == mediaInformation.bitRate
                && this.duration == mediaInformation.duration
                && this.startTime == mediaInformation.startTime;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (fileFormat == null ? 0 : System.hashCode(fileFormat));
        hashCode = (17 * hashCode) + (fileFormatFull == null ? 0 : System.hashCode(fileFormatFull));
        hashCode = (17 * hashCode) + (validFileFormats == null ? 0 : System.hashCode(validFileFormats));
        hashCode = (17 * hashCode) + (width == null ? 0 : System.hashCode(width));
        hashCode = (17 * hashCode) + (height == null ? 0 : System.hashCode(height));
        hashCode = (17 * hashCode) + (size == null ? 0 : System.hashCode(size));
        hashCode = (17 * hashCode) + (bitRate == null ? 0 : System.hashCode(bitRate));
        hashCode = (17 * hashCode) + (duration == null ? 0 : System.hashCode(duration));
        hashCode = (17 * hashCode) + (startTime == null ? 0 : System.hashCode(startTime));
        return hashCode;
    }
}

